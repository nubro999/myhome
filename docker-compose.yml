version: '3.8'

services:
  mysql:
    image: mysql:9.1.0
    container_name: mysql-container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports:
      - "3306:3306"
    networks:
      - my-network

  backend:
    image: my-spring-boot-app
    container_name: spring-boot-app
    build:
      context: ./myhome
      dockerfile: Dockerfile
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-container:3306/mydb
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    ports:
      - "8080:8080" # Spring Boot 앱 포트 매핑
    depends_on:
      - mysql
    networks:
      - my-network

  nginx:
    image: nginx:latest
    container_name: nginx-container
    ports:
      - "80:80" # 호스트의 80번 포트를 컨테이너의 80번 포트에 매핑
    volumes:
      - ./nginx/nginx.conf:/full-myhome/nginx/nginx.conf:ro # nginx.conf 파일 마운트 (읽기 전용)
      - ./nginx/conf.d:/full-myhome/nginx/conf.d:ro         # conf.d 디렉토리 마운트 (읽기 전용)
      - ./frontend/build:/usr/share/nginx/html:ro      # React 빌드 파일 마운트
    depends_on:
      - backend
    networks:
      - my-network

networks:
  my-network:
    driver: bridge




